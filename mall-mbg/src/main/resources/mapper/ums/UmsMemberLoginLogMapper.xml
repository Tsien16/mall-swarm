<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsien.mall.mbg.dao.ums.UmsMemberLoginLogMapper">
    <resultMap id="BaseResultMap" type="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog">
        <!--@mbg.generated-->
        <!--@Table ums_member_login_log-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="login_type" jdbcType="INTEGER" property="loginType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, member_id, province, city, ip, login_type, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from ums_member_login_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from ums_member_login_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_member_login_log (member_id, province, city,
                                          ip, login_type, create_time,
                                          update_time)
        values (#{memberId,jdbcType=BIGINT}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
                #{ip,jdbcType=VARCHAR}, #{loginType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_member_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                member_id,
            </if>
            <if test="province != null and province != ''">
                province,
            </if>
            <if test="city != null and city != ''">
                city,
            </if>
            <if test="ip != null and ip != ''">
                ip,
            </if>
            <if test="loginType != null">
                login_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="province != null and province != ''">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null and city != ''">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="ip != null and ip != ''">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog">
        <!--@mbg.generated-->
        update ums_member_login_log
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="province != null and province != ''">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null and city != ''">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="ip != null and ip != ''">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                login_type = #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog">
        <!--@mbg.generated-->
        update ums_member_login_log
        set member_id   = #{memberId,jdbcType=BIGINT},
            province    = #{province,jdbcType=VARCHAR},
            city        = #{city,jdbcType=VARCHAR},
            ip          = #{ip,jdbcType=VARCHAR},
            login_type  = #{loginType,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ums_member_login_log
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="member_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.memberId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="province = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.province,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="city = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.city,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="ip = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="login_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.loginType,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ums_member_login_log
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="member_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.memberId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.memberId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="province = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.province != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.province,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="city = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.city != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.city,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ip = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.ip != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="login_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.loginType != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.loginType,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_member_login_log
                (member_id, province, city, ip, login_type, create_time, update_time)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.memberId,jdbcType=BIGINT}, #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR},
             #{item.ip,jdbcType=VARCHAR}, #{item.loginType,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_member_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            member_id,
            province,
            city,
            ip,
            login_type,
            create_time,
            update_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{memberId,jdbcType=BIGINT},
            #{province,jdbcType=VARCHAR},
            #{city,jdbcType=VARCHAR},
            #{ip,jdbcType=VARCHAR},
            #{loginType,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            member_id   = #{memberId,jdbcType=BIGINT},
            province    = #{province,jdbcType=VARCHAR},
            city        = #{city,jdbcType=VARCHAR},
            ip          = #{ip,jdbcType=VARCHAR},
            login_type  = #{loginType,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.ums.UmsMemberLoginLog" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_member_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="province != null and province != ''">
                province,
            </if>
            <if test="city != null and city != ''">
                city,
            </if>
            <if test="ip != null and ip != ''">
                ip,
            </if>
            <if test="loginType != null">
                login_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="province != null and province != ''">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null and city != ''">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="ip != null and ip != ''">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="province != null and province != ''">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null and city != ''">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="ip != null and ip != ''">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                login_type = #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
</mapper>