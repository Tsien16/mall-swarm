<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsien.mall.mbg.dao.sms.SmsHomeBrandMapper">
    <resultMap id="BaseResultMap" type="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand">
        <!--@mbg.generated-->
        <!--@Table sms_home_brand-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="brand_id" jdbcType="BIGINT" property="brandId"/>
        <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
        <result column="recommend_status" jdbcType="INTEGER" property="recommendStatus"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, brand_id, brand_name, recommend_status, sort, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sms_home_brand
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from sms_home_brand
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sms_home_brand (brand_id, brand_name, recommend_status,
                                    sort, create_time, update_time)
        values (#{brandId,jdbcType=BIGINT}, #{brandName,jdbcType=VARCHAR}, #{recommendStatus,jdbcType=INTEGER},
                #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sms_home_brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="brandName != null and brandName != ''">
                brand_name,
            </if>
            <if test="recommendStatus != null">
                recommend_status,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="brandId != null">
                #{brandId,jdbcType=BIGINT},
            </if>
            <if test="brandName != null and brandName != ''">
                #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="recommendStatus != null">
                #{recommendStatus,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand">
        <!--@mbg.generated-->
        update sms_home_brand
        <set>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=BIGINT},
            </if>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="recommendStatus != null">
                recommend_status = #{recommendStatus,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand">
        <!--@mbg.generated-->
        update sms_home_brand
        set brand_id         = #{brandId,jdbcType=BIGINT},
            brand_name       = #{brandName,jdbcType=VARCHAR},
            recommend_status = #{recommendStatus,jdbcType=INTEGER},
            sort             = #{sort,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP},
            update_time      = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sms_home_brand
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="brand_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.brandId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="brand_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.brandName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="recommend_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.recommendStatus,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="sort = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.sort,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sms_home_brand
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="brand_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.brandId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.brandId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="brand_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.brandName != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.brandName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="recommend_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.recommendStatus != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.recommendStatus,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sort = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.sort != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.sort,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sms_home_brand
                (brand_id, brand_name, recommend_status, sort, create_time, update_time)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.brandId,jdbcType=BIGINT}, #{item.brandName,jdbcType=VARCHAR},
             #{item.recommendStatus,jdbcType=INTEGER},
             #{item.sort,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sms_home_brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            brand_id,
            brand_name,
            recommend_status,
            sort,
            create_time,
            update_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{brandId,jdbcType=BIGINT},
            #{brandName,jdbcType=VARCHAR},
            #{recommendStatus,jdbcType=INTEGER},
            #{sort,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            brand_id         = #{brandId,jdbcType=BIGINT},
            brand_name       = #{brandName,jdbcType=VARCHAR},
            recommend_status = #{recommendStatus,jdbcType=INTEGER},
            sort             = #{sort,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP},
            update_time      = #{updateTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.tsien.mall.mbg.domain.model.sms.SmsHomeBrand" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sms_home_brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="brandName != null and brandName != ''">
                brand_name,
            </if>
            <if test="recommendStatus != null">
                recommend_status,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=BIGINT},
            </if>
            <if test="brandName != null and brandName != ''">
                #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="recommendStatus != null">
                #{recommendStatus,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=BIGINT},
            </if>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="recommendStatus != null">
                recommend_status = #{recommendStatus,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
</mapper>